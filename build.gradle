buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'maven'
    id 'jacoco'
    id 'io.codearte.nexus-staging' version '0.11.0'
    id "org.sonarqube" version "2.7.1"
}

apply plugin: 'com.bmuschko.nexus'

group 'com.github.simonharmonicminor'
version 'DEV-SNAPSHOT'
description 'Universal expression builder from SQL-like query text'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile "org.mockito:mockito-core:2.+"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

modifyPom {
    project {
        name 'super-selector'
        description 'Universal expression builder from SQL-like query text'
        url 'https://github.com/SimonHarmonicMinor/super-selector'
        inceptionYear '2020'

        scm {
            url 'https://github.com/SimonHarmonicMinor/super-core'
            connection 'scm:https://github.com/SimonHarmonicMinor/super-selector.git'
            developerConnection 'scm:git://github.com/SimonHarmonicMinor/super-selector.git'
        }

        licenses {
            license {
                name 'MIT License'
                url 'https://www.mit.edu/~amini/LICENSE.md'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'kirekov'
                name 'Semyon Kirekov'
                email 'kirekov@gmail.com'
            }
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

nexusStaging {
    packageGroup = "com.github.simonharmonicminor"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "SimonHarmonicMinor_super-selector"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}